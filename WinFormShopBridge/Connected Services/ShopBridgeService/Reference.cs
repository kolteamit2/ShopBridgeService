//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WinFormShopBridge.ShopBridgeService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InventoryDetail", Namespace="http://schemas.datacontract.org/2004/07/ShopBridgeService")]
    [System.SerializableAttribute()]
    public partial class InventoryDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ItemPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemName {
            get {
                return this.ItemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemNameField, value) != true)) {
                    this.ItemNameField = value;
                    this.RaisePropertyChanged("ItemName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ItemPrice {
            get {
                return this.ItemPriceField;
            }
            set {
                if ((this.ItemPriceField.Equals(value) != true)) {
                    this.ItemPriceField = value;
                    this.RaisePropertyChanged("ItemPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ShopBridgeService.IShopBridgeService")]
    public interface IShopBridgeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShopBridgeService/GetInventoryDetail", ReplyAction="http://tempuri.org/IShopBridgeService/GetInventoryDetailResponse")]
        WinFormShopBridge.ShopBridgeService.InventoryDetail[] GetInventoryDetail();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShopBridgeService/GetInventoryDetail", ReplyAction="http://tempuri.org/IShopBridgeService/GetInventoryDetailResponse")]
        System.Threading.Tasks.Task<WinFormShopBridge.ShopBridgeService.InventoryDetail[]> GetInventoryDetailAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShopBridgeService/GetInventoryDetailByInventoryId", ReplyAction="http://tempuri.org/IShopBridgeService/GetInventoryDetailByInventoryIdResponse")]
        WinFormShopBridge.ShopBridgeService.InventoryDetail GetInventoryDetailByInventoryId(int inventoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShopBridgeService/GetInventoryDetailByInventoryId", ReplyAction="http://tempuri.org/IShopBridgeService/GetInventoryDetailByInventoryIdResponse")]
        System.Threading.Tasks.Task<WinFormShopBridge.ShopBridgeService.InventoryDetail> GetInventoryDetailByInventoryIdAsync(int inventoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShopBridgeService/SaveInventoryDetail", ReplyAction="http://tempuri.org/IShopBridgeService/SaveInventoryDetailResponse")]
        bool SaveInventoryDetail(WinFormShopBridge.ShopBridgeService.InventoryDetail request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShopBridgeService/SaveInventoryDetail", ReplyAction="http://tempuri.org/IShopBridgeService/SaveInventoryDetailResponse")]
        System.Threading.Tasks.Task<bool> SaveInventoryDetailAsync(WinFormShopBridge.ShopBridgeService.InventoryDetail request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShopBridgeService/UpdateInventoryDetail", ReplyAction="http://tempuri.org/IShopBridgeService/UpdateInventoryDetailResponse")]
        bool UpdateInventoryDetail(WinFormShopBridge.ShopBridgeService.InventoryDetail request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShopBridgeService/UpdateInventoryDetail", ReplyAction="http://tempuri.org/IShopBridgeService/UpdateInventoryDetailResponse")]
        System.Threading.Tasks.Task<bool> UpdateInventoryDetailAsync(WinFormShopBridge.ShopBridgeService.InventoryDetail request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShopBridgeService/DeleteInventoryDetail", ReplyAction="http://tempuri.org/IShopBridgeService/DeleteInventoryDetailResponse")]
        bool DeleteInventoryDetail(int inventoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShopBridgeService/DeleteInventoryDetail", ReplyAction="http://tempuri.org/IShopBridgeService/DeleteInventoryDetailResponse")]
        System.Threading.Tasks.Task<bool> DeleteInventoryDetailAsync(int inventoryId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IShopBridgeServiceChannel : WinFormShopBridge.ShopBridgeService.IShopBridgeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ShopBridgeServiceClient : System.ServiceModel.ClientBase<WinFormShopBridge.ShopBridgeService.IShopBridgeService>, WinFormShopBridge.ShopBridgeService.IShopBridgeService {
        
        public ShopBridgeServiceClient() {
        }
        
        public ShopBridgeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ShopBridgeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ShopBridgeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ShopBridgeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WinFormShopBridge.ShopBridgeService.InventoryDetail[] GetInventoryDetail() {
            return base.Channel.GetInventoryDetail();
        }
        
        public System.Threading.Tasks.Task<WinFormShopBridge.ShopBridgeService.InventoryDetail[]> GetInventoryDetailAsync() {
            return base.Channel.GetInventoryDetailAsync();
        }
        
        public WinFormShopBridge.ShopBridgeService.InventoryDetail GetInventoryDetailByInventoryId(int inventoryId) {
            return base.Channel.GetInventoryDetailByInventoryId(inventoryId);
        }
        
        public System.Threading.Tasks.Task<WinFormShopBridge.ShopBridgeService.InventoryDetail> GetInventoryDetailByInventoryIdAsync(int inventoryId) {
            return base.Channel.GetInventoryDetailByInventoryIdAsync(inventoryId);
        }
        
        public bool SaveInventoryDetail(WinFormShopBridge.ShopBridgeService.InventoryDetail request) {
            return base.Channel.SaveInventoryDetail(request);
        }
        
        public System.Threading.Tasks.Task<bool> SaveInventoryDetailAsync(WinFormShopBridge.ShopBridgeService.InventoryDetail request) {
            return base.Channel.SaveInventoryDetailAsync(request);
        }
        
        public bool UpdateInventoryDetail(WinFormShopBridge.ShopBridgeService.InventoryDetail request) {
            return base.Channel.UpdateInventoryDetail(request);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateInventoryDetailAsync(WinFormShopBridge.ShopBridgeService.InventoryDetail request) {
            return base.Channel.UpdateInventoryDetailAsync(request);
        }
        
        public bool DeleteInventoryDetail(int inventoryId) {
            return base.Channel.DeleteInventoryDetail(inventoryId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteInventoryDetailAsync(int inventoryId) {
            return base.Channel.DeleteInventoryDetailAsync(inventoryId);
        }
    }
}
